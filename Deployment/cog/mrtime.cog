# Jedi Knight Cog Script
#
# By ID_Junkguy, original cog by Zagibu

symbols

thing		player				local
thing		oldMrTime			local
thing		newMrTime=-1			local
thing		killer				local
thing		victim				local

model		oldModel			local
model		startupModel			local
model		mrTimeModel=mrtime.3do		local
model		fallbackModel=ky.3do		local

sound		warning=beep2.wav		local

int		rIndex=0			local
int		doubleCall=0			local

message		startup
message		killed
message		timer
message		pulse
message		trigger
message		leave
message		damaged

end

# ========================================================================================

code

startup:
	player = GetLocalPlayerThing();

	// Catch this player's messages
	CaptureThing(player);

	// Timer for model check and capture startup model
	SetTimerEx(1, 10902, player, -1);

	// Start "Bountyhunt" after delay
	if(isServer())
	{
		// Enable manual scoring system
		SetMultiModeFlags(0x4);

		// Start bountyhunt timer
		SetTimerEx(3, 10901, player, -1);
	} else {
		// indicate player joined (so deagles pup can be set if needed)
		SetTimerEx(2, 10904, player, -1);
	}


	// Set this item available
	SetInv(player, 48, 1);
	SetInvAvailable(player, 48, 1);
	
	Return;

# ........................................................................................

killed:

	// Only forward kill messages of local player
	victim = GetSenderRef();
	if ( victim == GetLocalPlayerThing() ) {
		SendTrigger(-1, 10912, GetThingParent(GetSourceRef()), victim, -1, -1);
	}

	Return;

# ........................................................................................

timer:
	player = GetParam(0);

	// Start bountyhunt timer
	if(GetSenderId() == 10901)
		SendTrigger(-1, 10911, player, -1, -1, -1);

	// Model check and capture startup model
	if(GetSenderId() == 10902)
	{
		if(GetThingModel(player) == mrTimeModel)
		{
			// Warning beep local
			PlaySoundLocal(warning, 1, 0, 0x4);

			Print("Player model reset to default");
			SendTrigger(-1, 10910, player, -1, -1, -1);
			startupModel = fallbackModel;
		}
		else
		{
			startupModel = GetThingModel(player);
		}
		SetThingPulse(player, 0.1);
	}

	// Double call prevention timer
	if(GetSenderId() == 10903)
		doubleCall = 0;

	// new client join timer
	if(GetSenderId() == 10904)
		SendTrigger(-1, 13372, player, 0, 0, 0);

	Return;

# ........................................................................................

pulse:

   player = GetSenderRef();

   // reset player model if not Mr Time
   if( (GetInv(player, 123) == 0.0) && GetThingModel(player) != startupModel ) {
   	SetThingModel(player, startupModel);
   }

   Return;

# ........................................................................................

trigger:
	// Cache trigger parameters
	killer = GetParam(0);
	victim = GetParam(1);

	// Force Model change trigger (startup message)
	if(GetSourceRef() == 10910)
		SetThingModel(killer, fallbackModel);

	// Sync newMrTime variable trigger (trigger message)
	if(GetSourceRef() == 10940)
	{
		newMrTime = GetParam(0);

		if(newMrTime == GetLocalPlayerThing())
		{
			// Set local player as Mr Time
			SetInv(newMrTime, 123, 1.0);
			
			// Set Weapons for local MR TIME
			SetInv(newMrTime, 1, 1.0);
			SetInv(newMrTime, 2, 1.0);
			// auto-select weapon here to force deselection of existing gun
			SelectWeapon(newMrTime, AutoSelectWeapon(newMrTime, 1));
  			SetInv(newMrTime, 3, 0.0);
  			SetInv(newMrTime, 4, 9.0);
  			SetInv(newMrTime, 5, 0.0);
  			SetInv(newMrTime, 6, 0.0);
  			SetInv(newMrTime, 7, 0.0);
  			SetInv(newMrTime, 8, 0.0);
   			SetInv(newMrTime, 9, 0.0);
   			SetInv(newMrTime, 10, 1.0);

			SetInv(newMrTime, 118, 0.0); //m4
			SetInv(newMrTime, 120, 0.0); //deagle
			SetInv(newMrTime, 125, 0.0); //raffaello
			SetInv(newMrTime, 126, 0.0); //double deagles

			SetInv(newMrTime, 21, 8); // enable high jump
			SetInvAvailable(newMrTime, 21, 1);

			SetFireWait(newMrTime, -1);
   			SetMountWait(newMrTime, 0);
   			SetCurInvWeapon(newMrTime, 0);

   			// Set BT amount
			SetInv(newMrTime, 116, 15);
		}
		else
		{
			// Set local player as NOT Mr Time (but don't adjust guns, since previous Mr Time will be respawning anyways)
			SetInv(GetLocalPlayerThing(), 123, 0.0);
		}

		// Locally print new Mr Time text message
		jkStringClear();
		jkStringConcatPlayerName(newMrTime);
		jkStringConcatAsciiString(" is now Mr Time!");
		jkStringOutput(GetLocalPlayerThing(), -1);
	}
	
	// Sync newMrTime variable trigger (trigger message) WITHOUT changing who is Mr Time.
	// Used to update animations when new player joins (for new player only).
	if(GetSourceRef() == 10941 && killer == GetLocalPlayerThing())
	{
		newMrTime = GetParam(1);

		// Print who is the new Mr Time
		jkStringClear();
		jkStringConcatPlayerName(newMrTime);
		jkStringConcatAsciiString(" is Mr Time!");
		jkStringOutput(GetLocalPlayerThing(), -1);

		// animations are updated in client_guns
	}

	if(!isServer())
		Return;

	if(GetSourceRef() == 13372) { // a player joined
		// on server, broadcast who is mr time (broadcast intended for the new player)
		SendTrigger(-1, 10941, killer, newMrTime, 0, 0);
	}

	// New Mr Time trigger (startup message)
	if(GetSourceRef() == 10911)
	{
		// Create new hunter
		newMrTime = killer;

		// Sync newMrTime variable
		SendTrigger(-1, 10940, killer, -1, -1, -1);

		oldModel = GetThingModel(newMrTime);
		SetThingModel(newMrTime, mrTimeModel);

		// Warning beep global
		PlaySoundGlobal(warning, 1, 0, 0x4);
	}

	// Kill trigger (killed message)
	if(GetSourceRef() == 10912)
	{
		// Check double call
		if(doubleCall == 1)
			Return;

		doubleCall = 1;
		SetTimerEx(1, 10903, -1, -1);

		// Suicide	
		if(killer == victim)
		{
			SetPlayerScore(victim, GetPlayerScore(victim) - 1);

			// Mr Time suicide
			if(victim == newMrTime)
			{
			      if(GetNumPlayers() > 1)
			      {
				   // Get new random Mr Time
				   rIndex = Rand() * GetNumPlayers();
				   // while index out of bounds or chose the original Mr Time, try again
				   while( (rIndex == GetNumPlayers()) || ( (GetNumPlayers() > 1) && (GetPlayerThing(rIndex) == victim) ) )
					rIndex = Rand() * GetNumPlayers();
				   killer = GetPlayerThing(rIndex);
			      }
			}
		}

		// Kill
		else
		{
			SetPlayerScore(killer, GetPlayerScore(killer) + 1);

			// Add score for Mr Time
			if(victim == newMrTime)
			{
				SetPlayerScore(killer, GetPlayerScore(killer) + 2);
			}
		}

		// Mr Time died
		if((victim == newMrTime) && (GetNumPlayers() > 1))
		{
			// Reset old Mr Time
			oldMrTime = victim;

			if(GetThingType(killer) != 10)
			{
				// Get new random Mr Time
				rIndex = Rand() * GetNumPlayers();
				// while index out of bounds or chose the original Mr Time, try again
				while( (rIndex == GetNumPlayers()) || ( (GetNumPlayers() > 1) && (GetPlayerThing(rIndex) == victim) ) )
					rIndex = Rand() * GetNumPlayers();
				killer = GetPlayerThing(rIndex);
			}

			// Create new Mr Time
			newMrTime = killer;

			// Sync newMrTime variable
			SendTrigger(-1, 10940, killer, -1, -1, -1);

			oldModel = GetThingModel(newMrTime);
			SetThingModel(newMrTime, mrTimeModel);

			// Warning beep global
			PlaySoundGlobal(warning, 1, 0, 0x4);

			// Turn off the Killing Time
			SendTrigger(-1, 13370, 0, 0, 0, 0);
		}
	}

	// Mr Time left trigger (leave message)
	if((GetSourceRef() == 10921) && (killer == newMrTime))
	{
		// Get new random Mr Time
		rIndex = Rand() * GetNumPlayers();
		// while index out of bounds or chose the original Mr Time, try again
		while( rIndex == GetNumPlayers() || (GetNumPlayers() > 1 && GetPlayerThing(rIndex) == victim) )
			rIndex = Rand() * GetNumPlayers();
		killer = GetPlayerThing(rIndex);

		// Set new Mr Time
		newMrTime = killer;

		oldModel = GetThingModel(newMrTime);
		SetThingModel(newMrTime, mrTimeModel);

		// Sync newMrTime variable
		SendTrigger(-1, 10940, killer, -1, -1, -1);

		// Warning beep global
		PlaySoundGlobal(warning, 1, 0, 0x4);

		// Turn off the Killing Time
		SendTrigger(-1, 13370, 0, 0, 0, 0);
	}

	Return;

# ........................................................................................

leave:
	SendTrigger(-1, 10921, GetSenderRef(), -1, -1, -1);

	Return;

# ........................................................................................

damaged:
	ReturnEx(GetParam(0));

	Return;

end
